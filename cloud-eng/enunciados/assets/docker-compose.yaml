version: '3.7'

services:
  test-api:
    container_name: test-api
    build:
      context: ./Dockerfiles/test-api/
      target: api
    restart: always
    entrypoint: /bin/bash -c 'bash /init.sh START_API && bash'
    networks:
      - test-network
    ports:
      - "81:80"
    environment:
      - POSTGRES_PASSWORD=2miYFGVoHMZrvZAh
      - REDIS_PASSWORD=YjtfdLD6arl3rL3h
    volumes:
      - ./Dockerfiles/test-api/init.sh/:/init.sh:ro
      - ./Dockerfiles/test-api/php/7.4/fpm/php.ini:/etc/php/7.4/fpm/php.ini:ro
      - ./Dockerfiles/test-api/php/7.4/fpm/php-fpm.conf:/etc/php/7.4/fpm/php-fpm.conf:ro
      - ./Dockerfiles/test-api/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "bash -x init.sh API_READY"]
      interval: 5s
      timeout: 5s
      retries: 5
    links:
      - test-pgsql
      - test-redis
      - test-worker
    depends_on:
      test-worker:
        condition: service_healthy
    tty: true

  test-worker:
    container_name: test-worker
    build:
      context: ./Dockerfiles/test-worker/
      target: worker
    restart: always
    entrypoint: /bin/bash -c 'bash /init.sh START_WORKER && bash'
    networks:
      - test-network
    ports:
      - "80:80"
    volumes:
      - ./Dockerfiles/test-worker/init.sh/:/init.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "bash -x init.sh WORKER_READY"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=2miYFGVoHMZrvZAh
      - POSTGRES_USER=postgres
      - POSTGRES_DB=troca-test
      - REDIS_PASSWORD=YjtfdLD6arl3rL3h
    links:
      - test-pgsql
      - test-redis
    depends_on:
      test-pgsql:
        condition: service_started
      test-redis:
        condition: service_healthy
    tty: true
          
  test-redis:
    container_name: test-redis
    image: redis:alpine
    command: redis-server
    ports:
      - 6379:6379
    volumes:
      - ./Dockerfiles/test-redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=YjtfdLD6arl3rL3h
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network
    deploy:
      resources:
        limits:
          cpus: '0.050'
          memory: 100M
        reservations:
          memory: 10M

  test-pgsql:
    container_name: test-pgsql
    image: postgres:latest
    ports:
      - 5432:5432
    networks:
      - test-network
    environment:
      - POSTGRES_PASSWORD=2miYFGVoHMZrvZAh
      - POSTGRES_USER=postgres
      - POSTGRES_DB=troca-test
    volumes:
      - ./Dockerfiles/test-pgsql/:/config:ro
    deploy:
      resources:
        limits:
          cpus: '0.100'
          memory: 200M
        reservations:
          memory: 100M

networks:
  test-network:
    name: test-network