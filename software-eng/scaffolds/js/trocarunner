#!/bin/bash

function cd_to_project() {
  ORIG_PWD=$(pwd)
  SOURCE="${BASH_SOURCE[0]}"
  while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done

  cd "$( cd -P "$( dirname "$SOURCE" )" && pwd )"
}

function out()
{
  local params
  local message

  params="-e"
  while [[ ${1} = -* ]]; do
      params="${params} ${1}"
      shift
  done

  message="${@}<0>"

  message=$(echo "${message}" | sed -E $'s/<([0-9;]+)>/\033\[\\1m/g')
  echo ${params} "${message}"
}

function logo()
{
  out '[0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m
[0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;214m [48;5;214m [48;5;214m [48;5;214m [48;5;214m [48;5;214m [48;5;214m [48;5;214m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m
[0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [0m [0m [48;5;214m [48;5;214m [48;5;214m [0m [0m [0m [0m [48;5;214m [48;5;214m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [0m [0m [0m
[0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [0m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;214m [48;5;214m [48;5;214m [0m [0m [0m [0m [48;5;214m [48;5;202m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m
[0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;202m [48;5;202m [48;5;202m [0m [0m [0m [0m [48;5;202m [48;5;202m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m
[0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [0m [0m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m
[0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [0m [0m [0m [0m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [48;5;202m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m [0m [48;5;244m [48;5;244m [48;5;244m [0m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [48;5;244m [0m
[0m'
}

function help()
{
  out '
  <33>Available commands:<0>
  <32;1>test<0>              Run tests in Docker<0>
  <32;1>coverage<0>          Run test & coverage in Docker<0>
  <32;1>lint<0>              Run linter in Docker<0>
  <32;1>cleanup<0>           Removes the built image<0>

  <33>Language specific:<0>
  <32;1>yarn<0>              Run yarn with args provided. Eg: ./trocarunner yarn add lodash<0>'
}

function check_docker()
{
  docker -v > /dev/null 2> /dev/null
  if [[ $? != 0 ]] ; then
    out 'Please, install Docker https://docs.docker.com/get-docker/'
    exit 1
  fi

  docker ps > /dev/null
  if [[ $? != 0 ]] ; then
    out ""
    out "You can search the error above to troubleshoot it."
    exit 1
  fi
}

function install_image()
{
  out 'Building Docker image'
  if [[ -z $(docker images | grep trocafone-interview-challenge-node) ]]; then
    echo 'First run! base image needs to be built :D'
  else
    docker tag trocafone-interview-challenge-node:latest trocafone-interview-challenge-node:old # tagging and then removing for cache porpouses
  fi
  docker build . -t trocafone-interview-challenge-node:latest 2>&1 > docker_build.log
  docker rmi trocafone-interview-challenge-node:old >> docker_build.log 2>> docker_build.log
}

function run_command()
{
  check_docker
  install_image
  docker run --rm -t trocafone-interview-challenge-node:latest $*
}

function run_command_with_volume()
{
  check_docker
  install_image
  docker run --rm -t --volume $(pwd):/opt/interview-challenge trocafone-interview-challenge-node:latest $*
}

function cleanup()
{
  docker rmi -f trocafone-interview-challenge-node:latest
}

cd_to_project

logo

COMMAND=$1; shift
case $COMMAND in
  coverage)
    run_command coverage
  ;;
  lint)
    run_command lint
  ;;
  test)
    run_command test
  ;;
  yarn)
    run_command_with_volume yarn $*
  ;;
  cleanup)
    cleanup
  ;;
  *)
    help
    exit 1
  ;;
esac

exit $?
